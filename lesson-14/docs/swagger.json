{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "University",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of university app"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8080"
    }
  ],
  "tags": [
    {
      "name": "Students",
      "description": "Operations about students."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/students/{id}": {
      "get": {
        "tags": ["Students"],
        "summary": "Get student by id",
        "operationId": "getStudent",
        "description": "Get student by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "672e559aefd1ec206c1b77a8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get student by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Student received successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/student"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Student not found:("
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/students": {
      "post": {
        "tags": ["Students"],
        "summary": "Create student",
        "operationId": "createStudent",
        "description": "Create a student",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "gender", "email", "age"],
                "properties": {
                  "name": {
                    "description": "Student's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "gender": {
                    "description": "Student's gender",
                    "type": "string",
                    "enum": ["male", "female"],
                    "example": "male"
                  },
                  "email": {
                    "description": "Student's email",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "age": {
                    "description": "Student's age",
                    "type": "integer",
                    "example": 26
                  },
                  "onDuty": {
                    "description": "Whether is student on duty",
                    "type": "boolean",
                    "example": false
                  },
                  "avatar": {
                    "description": "Student's avatar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created a student",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a student"
                    },
                    "data": {
                      "$ref": "#/components/schemas/student"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "student": {
        "type": "object",
        "required": ["_id", "name", "gender", "email", "age", "teacherId"],
        "properties": {
          "_id": {
            "description": "Student's id",
            "type": "string",
            "example": "672e559aefd1ec206c1b77a8"
          },
          "name": {
            "description": "Student's name",
            "type": "string",
            "example": "John Doe"
          },
          "gender": {
            "description": "Student's gender",
            "type": "string",
            "enum": ["male", "female"],
            "example": "male"
          },
          "email": {
            "description": "Student's email",
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "age": {
            "description": "Student's age",
            "type": "integer",
            "example": 26
          },
          "onDuty": {
            "description": "Whether is student on duty",
            "type": "boolean",
            "example": false,
            "default": false
          },
          "teacherId": {
            "description": "Student's teacher id",
            "type": "string",
            "example": "66a92312c1de214c68f17d10"
          },
          "avatar": {
            "description": "Student's avatar",
            "type": "string",
            "example": "https://res.cloudinary.com/dha4xvgfi/image/upload/v1724438545/g3n05nth0sgqzyakh0dm.jpg",
            "default": null
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Error"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token not provided"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
